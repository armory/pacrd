### Deploy manifest
# file: pipeline-stage-deploy-manifest.yaml
apiVersion: pacrd.armory.spinnaker.io/v1alpha1
kind: Pipeline
metadata:
  name: pacrd-deploymanifest-samples
spec:
  description: A sample showing how to define artifacts.
  application: &app-name pacrd-pipeline-stages-samples
  expectedArtifacts:
    - id: &image-id my-artifact
      displayName: *image-id
      matchArtifact: &manifest-repo-artifact
        type: docker/image
        properties:
          name: my-organization/my-container
          artifactAccount: docker-registry
      defaultArtifact:
        <<: *manifest-repo-artifact
      useDefaultArtifact: true
  stages:
    - type: deployManifest
      properties:
        name: Deploy manifest example
        refId: "1"
        account: kubernetes
        cloudProvider: kubernetes
        moniker: 
          app: *app-name
        manifestArtifactId: *image-id
        namespaceOverride: spinnaker
        requiredArtifactIds: [ "my-artifact" ]
        skipExpressionEvaluation: true
        source: artifact
        trafficManagement:
          enabled: true
          options: 
            enableTraffic: true
            namespace: ***REMOVED***
            services: [ "servicea", "serviceb" ]
            strategy: redblack
    - type: deployManifest
      properties:
        name: Deploy text manifest
        refId: "2"
        requisiteStageRefIds: [ "1" ]
        account: kubernetes
        cloudProvider: kubernetes
        moniker:
          app: *app-name
        namespaceOverride: spinnaker
        skipExpressionEvaluation: true
        source: text
        trafficManagement:
          enabled: true
          options:
            enableTraffic: true
            namespace: spinnaker
            services: [ "servicea", "serviceb" ]
            strategy: redblack
        manifests:
          - |
            apiVersion: v1
            kind: Deployment
            metadata:
              name: foo
            spec:
              containers:
                - name: bar
                  image: nginx:1.17
          - |
            apiVersion: v1
            kind: Service
            metadata:
              name: foo
            spec:
              type: ClusterIP
              selector:
                app: foo
              ports:
                - protocol: TCP
                  port: 80
                  targetPort: 80
